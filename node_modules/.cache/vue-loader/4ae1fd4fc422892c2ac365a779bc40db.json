{"remainingRequest":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/src/components/common/gridView/GridView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/src/components/common/gridView/GridView.vue","mtime":1622267426000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZ3JpZC12aWV3IHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtd3JhcDogd3JhcDsNCn0NCg=="},{"version":3,"sources":["GridView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA","file":"GridView.vue","sourceRoot":"src/components/common/gridView","sourcesContent":["<template>\r\n    <div class=\"grid-view\" ref=\"gridView\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'GridView',\r\n  props: {\r\n      cols: {\r\n        type: Number,\r\n        default: 2\r\n      },\r\n      hMargin: {\r\n        type: Number,\r\n        default: 8\r\n      },\r\n      vMargin: {\r\n        type: Number,\r\n        default: 8\r\n      },\r\n      itemSpace: {\r\n        type: Number,\r\n        default: 8\r\n      },\r\n      lineSpace: {\r\n        type: Number,\r\n        default: 8\r\n      }\r\n    },\r\n    mounted () {\r\n      setTimeout(this._autoLayout, 20)\r\n    },\r\n    updated () {\r\n      this._autoLayout()\r\n    },\r\n    methods: {\r\n      _autoLayout() {\r\n        // 1.获取gridEl和children\r\n        // 注: 这里为什么不用document.querySelector呢?\r\n        // 答: 因为如果在项目中, 多处都用到了grid-view, 那么这里就不确定获取的是哪一个了.\r\n        let gridEl = this.$refs.gridView\r\n        let children = gridEl.children\r\n        // 2.设置gridEl的内边距\r\n        gridEl.style.padding = `${this.vMargin}px ${this.hMargin}px`\r\n        // 3.计算item的宽度\r\n        let itemWidth = (gridEl.clientWidth - 2 * this.hMargin - (this.cols) * this.itemSpace) / this.cols\r\n        for (let i = 0; i< children.length; i++) {\r\n          let item = children[i]\r\n          item.style.width = itemWidth + 'px'\r\n          if((i+1) % this.cols !== 0) {\r\n            item.style.marginRight = this.itemSpace + 'px'\r\n          }\r\n          if (i >= this.cols) {\r\n            item.style.marginTop = this.lineSpace + 'px'\r\n          }\r\n        }\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.grid-view {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n</style>\r\n"]}]}