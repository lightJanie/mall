{"remainingRequest":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/src/views/Cart/childComps/CartBottomBar.vue?vue&type=style&index=0&id=bc3d16f4&scoped=true&lang=css&","dependencies":[{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/src/views/Cart/childComps/CartBottomBar.vue","mtime":1622267426000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tarena/yuying/Learning/Vue3/Vue-Project/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmJvdHRvbS1iYXIgew0KICAgIGhlaWdodDogNDBweDsNCiAgICBsaW5lLWhlaWdodDogNDBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlOw0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICB6LWluZGV4OiA5OTsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICBmb250LXNpemU6IDE0cHg7DQp9DQouYnV0dG9uIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgbWFyZ2luLWxlZnQ6IDhweDsNCiAgICB3aWR0aDogNjBweDsNCn0NCi5jaGVjay1idXR0b24gew0KICAgIHdpZHRoOiAxOHB4Ow0KICAgIGhlaWdodDogMThweDsNCiAgICBsaW5lLWhlaWdodDogMjBweDsNCiAgICBtYXJnaW4tcmlnaHQ6IDVweDsNCn0NCi50b3RhbC1wcmljZSB7DQogICAgbWFyZ2luLWxlZnQ6IDIwcHg7DQogICAgZmxleDogMTsNCn0NCi5jYWxjdWxhdGUgew0KICAgIHdpZHRoOiAxMDBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rOw0KfQ0K"},{"version":3,"sources":["CartBottomBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CartBottomBar.vue","sourceRoot":"src/views/Cart/childComps","sourcesContent":["<template>\r\n    <div class=\"bottom-bar\">\r\n        <div class=\"button\">\r\n            <check-button :is-check='isSelectAll' class=\"check-button\" @click.native=\"checkAll\"></check-button>\r\n            <span>全选</span>\r\n        </div>\r\n        <div class=\"total-price\">\r\n            合计：{{totalPrice}}\r\n        </div>\r\n        <div class=\"calculate\" @click=\"calcClick\">\r\n            去计算({{counted}})\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport CheckButton from 'components/content/checkButton/CheckButton'\r\nimport {mapGetters} from 'vuex'\r\nexport default {\r\n  name: 'CartBottomBar',\r\n  components: {\r\n    CheckButton\r\n  },\r\n  computed: {\r\n    ...mapGetters(['cartList']),\r\n    totalPrice () {\r\n    //   return '￥' + this.$store.state.cartList.filter(item => {\r\n      return '￥' + this.cartList.filter(item => {  // mapGetters结构之后这样写\r\n          return item.checked}).reduce((preValue,item) => {\r\n              return preValue + item.price * item.count\r\n          },0).toFixed(2) // toFixed(2) 计算结果保留2位小数\r\n    },\r\n    counted () {\r\n      return this.cartList.filter(item => item.checked).length\r\n    },\r\n    isSelectAll () {\r\n        // 1. filter会将数组全部遍历完\r\n        // if(this.cartList.length === 0) return false\r\n    //   return !(this.cartList.filter(item => !item.checked).length) // 对未被选中的商品长度进行取反，0取反为true\r\n    // 2. find只找到一个就不找了，性能会高一点\r\n      if(this.cartList.length === 0) return false  // 购物车中没有商品时，默认不选中\r\n      return !(this.cartList.find(item => !item.checked)) // (括号里面有值的情况下再取反，结果就为false)\r\n    // 3.简单遍历，也会全部遍历完\r\n    // for(let item of this.cartList){\r\n    //     if(!item.checked){ // 没有选中的情况为真\r\n    //             return false\r\n    //         }\r\n    //     }\r\n    //         return true\r\n    }\r\n  },\r\n  methods: {\r\n    checkAll () {\r\n      if(this.isSelectAll){ // 全部选中时\r\n        this.cartList.forEach(item => item.checked = false)\r\n      }else {\r\n        this.cartList.forEach(item => item.checked = true)\r\n      }\r\n    //   上述代码可以做一个简化\r\n    // this.cartList.forEach(item => item.checked = !this.isSelectAll)  平常的代码可以这样做简化，但此时不行，因为isSelectAll又会影响其他的地方，相互影响\r\n    },\r\n    calcClick () {\r\n      if(!this.isSelectAll){\r\n        this.$toast.show('请选择购买的商品',1000)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.bottom-bar {\r\n    height: 40px;\r\n    line-height: 40px;\r\n    background-color: #eee;\r\n    position: relative;\r\n    z-index: 99;\r\n    display: flex;\r\n    text-align: center;\r\n    font-size: 14px;\r\n}\r\n.button {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 8px;\r\n    width: 60px;\r\n}\r\n.check-button {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 20px;\r\n    margin-right: 5px;\r\n}\r\n.total-price {\r\n    margin-left: 20px;\r\n    flex: 1;\r\n}\r\n.calculate {\r\n    width: 100px;\r\n    background-color: pink;\r\n}\r\n</style>\r\n"]}]}